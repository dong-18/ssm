<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql语句，后继有重要重要
	 #{}：点位符，相当于jdbc的?
	 ${}：字符串拼接指令，如果入参为普通数据类型{}内部只写value
-->
<!-- 动态代理开发规则：
	 1、namespace必需是接口的全路径名
	 2、接口的方法名必需与sql id 一致
	 3、接口的入参与parameterType类型一致
	 4、接口的返回值必须与resultType类型一致
-->
<mapper namespace="com.zx.dao.ArticleDao1">

	<select id="getAllArticle" resultMap="a">
		select * from ec_article where type_code like #{0} and title like #{1}
		<if test="a=='0'.toString()">
		and disabled = '0'
		</if>
		 limit #{3},#{4}
	</select>
	
	
	<!-- 使用resultMap -->
	<select id="getArticleById" parameterType="int" resultMap="a">
		select * from ec_article where id = #{w}
	</select>
	<resultMap type="article" id="a">
	<!-- id标签用于绑定主键 -->
		<id property="id" column="id"/>
		<!-- 使用result绑定普通字段 -->
		<result property="typeCode" column="type_code"/>
		<result property="createDate" column="create_date"/>
	</resultMap>
	<select id="getTotalNum"  resultType="int">
		select count(*) from ec_article where type_code like #{0} and title like #{1}
	</select>
	<insert id="save" parameterType="article">
	insert into ec_article(title, supplier, price, locality,storage, image, description, type_code, create_date)  values(#{title}, #{supplier},#{price}, #{locality}, #{storage}, #{image},#{description}, #{typeCode}, #{createDate})</insert>
	
	<update id="update" parameterType="article">
	update ec_article set type_code = #{typeCode},title= #{title},discount= #{discount},locality=#{locality},price=#{price},storage=#{storage}, image = #{ image} ,description=#{ description},supplier=#{ supplier} where id = #{ id}</update>
	<update id="removeOrPutArticleServlet">update ec_article  set disabled = #{0} where id = #{1}</update>
</mapper>
